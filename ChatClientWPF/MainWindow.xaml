<Window x:Class="ChatClientWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ChatClientWPF"
        mc:Ignorable="d"
        Title="Random Chat" Height="550" Width="450"
        Closing="Window_Closing">
    <Window.Resources>
        <Style x:Key="MessageBubble" TargetType="Border">
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5,3"/>
            <Setter Property="MaxWidth" Value="250"/>
        </Style>
        <Style x:Key="SystemMessageBubble" TargetType="Border">
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="20,3"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="MaxWidth" Value="300"/>
        </Style>
        <Style x:Key="ChatTimeStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Margin" Value="0,0,5,0"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
        </Style>
        <Style x:Key="ImageMessageStyle" TargetType="Image">
            <Setter Property="MaxWidth" Value="200"/>
            <Setter Property="MaxHeight" Value="200"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Stretch" Value="Uniform"/>
        </Style>
        <Style x:Key="MenuButtonStyle" TargetType="Button">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Background" Value="#FF4169E1"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="15"
                                Padding="10,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FF5A7DE1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#FF3159D1"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#FFCCCCCC"/>
                                <Setter Property="Foreground" Value="#FF666666"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- 헤더 섹션 -->
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0">
                <TextBlock Text="Random Chat" FontWeight="Bold" FontSize="18" Margin="0,0,0,5"/>
                <TextBlock Text="{Binding ConnectionStatus}" Margin="0,0,0,5"/>
                <TextBlock Text="{Binding MatchStatus}" Margin="0,0,0,5"/>
                <TextBlock Text="{Binding LocationText}" Margin="0,0,0,5"/>
                <!-- 포인트 정보 추가 -->
                <TextBlock Text="{Binding PointsText}" Margin="0,0,0,5" FontWeight="Bold" Foreground="#FF4169E1"/>
                <!-- 선호도 활성화 상태 추가 -->
                <TextBlock Text="{Binding PreferenceStatusText}" Margin="0,0,0,10" 
                           Visibility="{Binding IsPreferenceActive, Converter={StaticResource BoolToVisibilityConverter}}"
                           Foreground="Green"/>
            </StackPanel>
            <StackPanel Grid.Column="1" Orientation="Vertical">
                <Button Grid.Column="1" Content="{Binding IsConnected, Converter={StaticResource BoolToConnectButtonTextConverter}}" 
                        Click="Connect_Click" Width="80" Height="30" VerticalAlignment="Top"/>
                <Button Content="설정" Click="Settings_Click" Width="80" Height="30" Margin="0,5,0,0"
                        Style="{StaticResource MenuButtonStyle}"/>
                <Button Content="상점" Click="Store_Click" Width="80" Height="30" Margin="0,5,0,0"
                        Style="{StaticResource MenuButtonStyle}"/>
                <Button Content="종료" Click="Exit_Click" Width="80" Height="30" Margin="0,5,0,0"/>
            </StackPanel>
        </Grid>

        <!-- 설정 섹션 (필요할 때만 표시) -->
        <Grid Grid.Row="1" Margin="0,0,0,10" Visibility="{Binding ShowSettings, Converter={StaticResource BoolToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Text="서버 URL:" VerticalAlignment="Center" Margin="0,0,5,0"/>
            <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding ServerUrl}" Margin="0,0,10,0" IsEnabled="{Binding IsDisconnected}"/>

            <TextBlock Grid.Row="0" Grid.Column="2" Text="내 성별:" VerticalAlignment="Center" Margin="0,0,5,0"/>
            <ComboBox Grid.Row="0" x:Name="GenderComboBox" Grid.Column="3" SelectedItem="{Binding SelectedGender}" IsEnabled="{Binding IsDisconnected}">
                <ComboBoxItem Content="남성" Tag="male"/>
                <ComboBoxItem Content="여성" Tag="female"/>
            </ComboBox>

            <!-- 위치 정보 입력 -->
            <TextBlock Grid.Row="1" Grid.Column="0" Text="위도:" VerticalAlignment="Center" Margin="0,10,5,0"/>
            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Latitude, StringFormat=F6}" Margin="0,10,10,0" IsEnabled="{Binding IsConnected}"/>

            <TextBlock Grid.Row="1" Grid.Column="2" Text="경도:" VerticalAlignment="Center" Margin="0,10,5,0"/>
            <TextBox Grid.Row="1" Grid.Column="3" Text="{Binding Longitude, StringFormat=F6}" Margin="0,10,0,0" IsEnabled="{Binding IsConnected}"/>

            <!-- 매칭 선호도 설정 -->
            <TextBlock Grid.Row="2" Grid.Column="0" Text="선호 성별:" VerticalAlignment="Center" Margin="0,10,5,0"/>
            <ComboBox Grid.Row="2" Grid.Column="1" x:Name="PreferredGenderComboBox" 
                      SelectedItem="{Binding SelectedPreferredGender}" 
                      Margin="0,10,10,0" IsEnabled="{Binding CanChangePreference}">
                <ComboBoxItem Content="제한 없음" Tag="any"/>
                <ComboBoxItem Content="남성만" Tag="male"/>
                <ComboBoxItem Content="여성만" Tag="female"/>
            </ComboBox>

            <TextBlock Grid.Row="2" Grid.Column="2" Text="최대 거리:" VerticalAlignment="Center" Margin="0,10,5,0"/>
            <ComboBox Grid.Row="2" Grid.Column="3" x:Name="MaxDistanceComboBox" 
                      SelectedItem="{Binding SelectedMaxDistance}"
                      Margin="0,10,0,0" IsEnabled="{Binding CanChangePreference}">
                <ComboBoxItem Content="5 km" Tag="5"/>
                <ComboBoxItem Content="25 km" Tag="25"/>
                <ComboBoxItem Content="50 km" Tag="50"/>
                <ComboBoxItem Content="100 km" Tag="100"/>
                <ComboBoxItem Content="제한 없음" Tag="10000"/>
            </ComboBox>

            <!-- 매칭 설정 저장 버튼 -->
            <Grid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="4" Margin="0,10,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" Content="매칭 설정 저장" 
                        Click="SavePreferences_Click" 
                        IsEnabled="{Binding CanSavePreferences}"
                        Style="{StaticResource MenuButtonStyle}"
                        Margin="5,0"/>

                <Button Grid.Column="1" Content="선호도 활성화 (1000 포인트)" 
                        Click="ActivatePreference_Click" 
                        IsEnabled="{Binding CanActivatePreference}"
                        Style="{StaticResource MenuButtonStyle}"
                        Margin="5,0"/>
            </Grid>
        </Grid>

        <!-- 채팅 메시지 리스트 -->
        <Border Grid.Row="2" BorderThickness="1" BorderBrush="#DDDDDD" Background="#F5F5F5" Padding="5">
            <ListView x:Name="MessageList" ItemsSource="{Binding Messages}" ScrollViewer.VerticalScrollBarVisibility="Auto"
                     BorderThickness="0" Background="Transparent">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListViewItem">
                                    <ContentPresenter/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <!-- 시스템 메시지 -->
                            <Border Style="{StaticResource SystemMessageBubble}" 
                                    Visibility="{Binding IsSystemMessage, Converter={StaticResource BoolToVisibilityConverter}}">
                                <TextBlock Text="{Binding Content}" TextWrapping="Wrap" FontStyle="Italic"/>
                            </Border>

                            <!-- 일반 채팅 메시지 -->
                            <StackPanel Orientation="Horizontal" 
                                        HorizontalAlignment="{Binding MessageAlignment}"
                                        Visibility="{Binding IsSystemMessage, Converter={StaticResource BoolToVisibilityConverterInverted}}">

                                <TextBlock Text="{Binding FormattedTime}" Style="{StaticResource ChatTimeStyle}"
                                           Visibility="{Binding IsFromMe, Converter={StaticResource BoolToVisibilityConverterInverted}}"/>

                                <Border Background="{Binding MessageBackground}" Style="{StaticResource MessageBubble}">
                                    <!-- 텍스트 또는 이미지 표시 -->
                                    <Grid>
                                        <!-- 텍스트 메시지 -->
                                        <TextBlock Text="{Binding Content}" TextWrapping="Wrap"
                                                   Visibility="{Binding IsImageMessage, Converter={StaticResource BoolToVisibilityConverterInverted}}"/>

                                        <!-- 이미지 메시지 -->
                                        <StackPanel Visibility="{Binding IsImageMessage, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <Image Source="{Binding ThumbnailUrl}" Style="{StaticResource ImageMessageStyle}" 
                                                   MouseLeftButtonDown="Image_MouseLeftButtonDown" Tag="{Binding ImageUrl}"/>
                                            <TextBlock Text="이미지를 클릭하면 원본을 볼 수 있습니다" FontSize="9" Foreground="Gray"
                                                       HorizontalAlignment="Center" Margin="0,2,0,0"/>
                                        </StackPanel>
                                    </Grid>
                                </Border>

                                <TextBlock Text="{Binding FormattedTime}" Style="{StaticResource ChatTimeStyle}"
                                           Visibility="{Binding IsFromMe, Converter={StaticResource BoolToVisibilityConverter}}"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Border>

        <!-- 버튼 컨트롤 -->
        <StackPanel Grid.Row="3" Orientation="Horizontal" Margin="0,10,0,10" HorizontalAlignment="Center">
            <Button Content="재연결" Click="ReMatch_Click" Width="100" IsEnabled="{Binding IsConnected}" Style="{StaticResource MenuButtonStyle}"/>
        </StackPanel>

        <!-- 메시지 입력 -->
        <Grid Grid.Row="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <TextBox Grid.Column="0" Text="{Binding MessageInput, UpdateSourceTrigger=PropertyChanged}" 
                     KeyDown="MessageInput_KeyDown" IsEnabled="{Binding CanSendMessage}" 
                     TextWrapping="Wrap" AcceptsReturn="True" Height="50" Padding="5"/>

            <Button Grid.Column="1" Content="이미지" Click="SendImage_Click" IsEnabled="{Binding CanSendMessage}" 
                    Width="60" Height="50" Margin="5,0,0,0"/>

            <Button Grid.Column="2" Content="전송" Click="SendMessage_Click" IsEnabled="{Binding CanSendMessage}" 
                    Width="60" Height="50" Margin="5,0,0,0"/>
        </Grid>
    </Grid>
</Window>